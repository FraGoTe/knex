'use strict';

var inherits = require('inherits');
var Promise = require('../../promise');
var Transaction = require('../../transaction');
var assign = require('lodash/object/assign');
var debugTx = require('debug')('knex:tx');

function Oracle_Transaction(client, container, config, outerTx) {
  Transaction.call(this, client, container, config, outerTx);
}
inherits(Oracle_Transaction, Transaction);

assign(Oracle_Transaction.prototype, {

  // disable autocommit to allow correct behavior (default is true)
  begin: function begin() {
    return Promise.resolve();
  },

  commit: function commit(conn, value) {
    this._completed = true;
    return conn.commitAsync()['return'](value).then(this._resolver, this._rejecter);
  },

  release: function release(conn, value) {
    return this._resolver(value);
  },

  rollback: function rollback(conn, err) {
    this._completed = true;
    debugTx('%s: rolling back', this.txid);
    return conn.rollbackAsync()['throw'](err)['catch'](this._rejecter);
  },

  acquireConnection: function acquireConnection(config) {
    var t = this;
    return Promise['try'](function () {
      return config.connection || t.client.acquireConnection();
    }).tap(function (connection) {
      if (!t.outerTx) {
        connection.setAutoCommit(false);
      }
    }).disposer(function (connection) {
      debugTx('%s: releasing connection', t.txid);
      connection.setAutoCommit(true);
      if (!config.connection) {
        t.client.releaseConnection(connection);
      } else {
        debugTx('%s: not releasing external connection', t.txid);
      }
    });
  }

});

module.exports = Oracle_Transaction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kaWFsZWN0cy9vcmFjbGUvdHJhbnNhY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFJLFFBQVEsR0FBTSxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUE7QUFDckMsSUFBSSxPQUFPLEdBQU8sT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFBO0FBQzFDLElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBO0FBQzlDLElBQUksTUFBTSxHQUFRLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQ2xELElBQUksT0FBTyxHQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQTs7QUFFN0MsU0FBUyxrQkFBa0IsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUU7QUFDOUQsYUFBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUE7Q0FDM0Q7QUFDRCxRQUFRLENBQUMsa0JBQWtCLEVBQUUsV0FBVyxDQUFDLENBQUE7O0FBRXpDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLEVBQUU7OztBQUduQyxPQUFLLEVBQUUsaUJBQVc7QUFDaEIsV0FBTyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUE7R0FDekI7O0FBRUQsUUFBTSxFQUFFLGdCQUFTLElBQUksRUFBRSxLQUFLLEVBQUU7QUFDNUIsUUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUE7QUFDdEIsV0FBTyxJQUFJLENBQUMsV0FBVyxFQUFFLFVBQ2hCLENBQUMsS0FBSyxDQUFDLENBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0dBQ3hDOztBQUVELFNBQU8sRUFBRSxpQkFBUyxJQUFJLEVBQUUsS0FBSyxFQUFFO0FBQzdCLFdBQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQTtHQUM3Qjs7QUFFRCxVQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFLEdBQUcsRUFBRTtBQUM1QixRQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQTtBQUN0QixXQUFPLENBQUMsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0FBQ3RDLFdBQU8sSUFBSSxDQUFDLGFBQWEsRUFBRSxTQUNuQixDQUFDLEdBQUcsQ0FBQyxTQUNMLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0dBQ3pCOztBQUVELG1CQUFpQixFQUFFLDJCQUFTLE1BQU0sRUFBRTtBQUNsQyxRQUFJLENBQUMsR0FBRyxJQUFJLENBQUE7QUFDWixXQUFPLE9BQU8sT0FBSSxDQUFDLFlBQVc7QUFDNUIsYUFBTyxNQUFNLENBQUMsVUFBVSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEVBQUUsQ0FBQTtLQUN6RCxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQVMsVUFBVSxFQUFFO0FBQzFCLFVBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFO0FBQ2Qsa0JBQVUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUE7T0FDaEM7S0FDRixDQUFDLENBQUMsUUFBUSxDQUFDLFVBQVMsVUFBVSxFQUFFO0FBQy9CLGFBQU8sQ0FBQywwQkFBMEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDM0MsZ0JBQVUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDOUIsVUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUU7QUFDdEIsU0FBQyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQTtPQUN2QyxNQUFNO0FBQ0wsZUFBTyxDQUFDLHVDQUF1QyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQTtPQUN6RDtLQUNGLENBQUMsQ0FBQTtHQUNIOztDQUVGLENBQUMsQ0FBQTs7QUFFRixNQUFNLENBQUMsT0FBTyxHQUFHLGtCQUFrQixDQUFBIiwiZmlsZSI6InRyYW5zYWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgaW5oZXJpdHMgICAgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgUHJvbWlzZSAgICAgPSByZXF1aXJlKCcuLi8uLi9wcm9taXNlJylcbnZhciBUcmFuc2FjdGlvbiA9IHJlcXVpcmUoJy4uLy4uL3RyYW5zYWN0aW9uJylcbnZhciBhc3NpZ24gICAgICA9IHJlcXVpcmUoJ2xvZGFzaC9vYmplY3QvYXNzaWduJyk7XG52YXIgZGVidWdUeCAgICAgPSByZXF1aXJlKCdkZWJ1ZycpKCdrbmV4OnR4JylcblxuZnVuY3Rpb24gT3JhY2xlX1RyYW5zYWN0aW9uKGNsaWVudCwgY29udGFpbmVyLCBjb25maWcsIG91dGVyVHgpIHtcbiAgVHJhbnNhY3Rpb24uY2FsbCh0aGlzLCBjbGllbnQsIGNvbnRhaW5lciwgY29uZmlnLCBvdXRlclR4KVxufVxuaW5oZXJpdHMoT3JhY2xlX1RyYW5zYWN0aW9uLCBUcmFuc2FjdGlvbilcblxuYXNzaWduKE9yYWNsZV9UcmFuc2FjdGlvbi5wcm90b3R5cGUsIHtcblxuICAvLyBkaXNhYmxlIGF1dG9jb21taXQgdG8gYWxsb3cgY29ycmVjdCBiZWhhdmlvciAoZGVmYXVsdCBpcyB0cnVlKVxuICBiZWdpbjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpXG4gIH0sXG5cbiAgY29tbWl0OiBmdW5jdGlvbihjb25uLCB2YWx1ZSkge1xuICAgIHRoaXMuX2NvbXBsZXRlZCA9IHRydWVcbiAgICByZXR1cm4gY29ubi5jb21taXRBc3luYygpXG4gICAgICAucmV0dXJuKHZhbHVlKVxuICAgICAgLnRoZW4odGhpcy5fcmVzb2x2ZXIsIHRoaXMuX3JlamVjdGVyKVxuICB9LFxuXG4gIHJlbGVhc2U6IGZ1bmN0aW9uKGNvbm4sIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Jlc29sdmVyKHZhbHVlKVxuICB9LCAgXG5cbiAgcm9sbGJhY2s6IGZ1bmN0aW9uKGNvbm4sIGVycikge1xuICAgIHRoaXMuX2NvbXBsZXRlZCA9IHRydWVcbiAgICBkZWJ1Z1R4KCclczogcm9sbGluZyBiYWNrJywgdGhpcy50eGlkKVxuICAgIHJldHVybiBjb25uLnJvbGxiYWNrQXN5bmMoKVxuICAgICAgLnRocm93KGVycilcbiAgICAgIC5jYXRjaCh0aGlzLl9yZWplY3RlcilcbiAgfSxcblxuICBhY3F1aXJlQ29ubmVjdGlvbjogZnVuY3Rpb24oY29uZmlnKSB7XG4gICAgdmFyIHQgPSB0aGlzXG4gICAgcmV0dXJuIFByb21pc2UudHJ5KGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGNvbmZpZy5jb25uZWN0aW9uIHx8IHQuY2xpZW50LmFjcXVpcmVDb25uZWN0aW9uKCkgIFxuICAgIH0pLnRhcChmdW5jdGlvbihjb25uZWN0aW9uKSB7XG4gICAgICBpZiAoIXQub3V0ZXJUeCkge1xuICAgICAgICBjb25uZWN0aW9uLnNldEF1dG9Db21taXQoZmFsc2UpXG4gICAgICB9XG4gICAgfSkuZGlzcG9zZXIoZnVuY3Rpb24oY29ubmVjdGlvbikge1xuICAgICAgZGVidWdUeCgnJXM6IHJlbGVhc2luZyBjb25uZWN0aW9uJywgdC50eGlkKVxuICAgICAgY29ubmVjdGlvbi5zZXRBdXRvQ29tbWl0KHRydWUpXG4gICAgICBpZiAoIWNvbmZpZy5jb25uZWN0aW9uKSB7XG4gICAgICAgIHQuY2xpZW50LnJlbGVhc2VDb25uZWN0aW9uKGNvbm5lY3Rpb24pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkZWJ1Z1R4KCclczogbm90IHJlbGVhc2luZyBleHRlcm5hbCBjb25uZWN0aW9uJywgdC50eGlkKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxufSlcblxubW9kdWxlLmV4cG9ydHMgPSBPcmFjbGVfVHJhbnNhY3Rpb25cbiJdfQ==