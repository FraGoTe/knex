
// MySQL Schema Compiler
// -------
'use strict';

var inherits = require('inherits');
var SchemaCompiler = require('../../../schema/compiler');
var assign = require('lodash/object/assign');

function SchemaCompiler_MSSQL(client, builder) {
  SchemaCompiler.call(this, client, builder);
}
inherits(SchemaCompiler_MSSQL, SchemaCompiler);

assign(SchemaCompiler_MSSQL.prototype, {

  dropTablePrefix: 'DROP TABLE ',
  dropTableIfExists: function dropTableIfExists(tableName) {
    var name = this.formatter.wrap(prefixedTableName(this.schema, tableName));
    this.pushQuery('if object_id(\'' + name + '\', \'U\') is not null DROP TABLE ' + name);
  },

  // Rename a table on the schema.
  renameTable: function renameTable(tableName, to) {
    this.pushQuery('exec sp_rename ' + this.formatter.parameter(tableName) + ', ' + this.formatter.parameter(to));
  },

  // Check whether a table exists on the query.
  hasTable: function hasTable(tableName) {
    this.pushQuery({
      sql: 'select object_id from sys.tables where object_id = object_id(' + this.formatter.parameter(this.formatter.wrap(tableName)) + ')',
      output: function output(resp) {
        return resp.length > 0;
      }
    });
  },

  // Check whether a column exists on the schema.
  hasColumn: function hasColumn(tableName, column) {
    this.pushQuery({
      sql: 'select object_id from sys.columns where name = ' + this.formatter.parameter(column) + ' and object_id = object_id(' + this.formatter.parameter(this.formatter.wrap(tableName)) + ')',
      output: function output(resp) {
        return resp.length > 0;
      }
    });
  }

});

function prefixedTableName(prefix, table) {
  return prefix ? prefix + '.' + table : table;
}

module.exports = SchemaCompiler_MSSQL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9kaWFsZWN0cy9tc3NxbC9zY2hlbWEvY29tcGlsZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFHQSxJQUFJLFFBQVEsR0FBUyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDekMsSUFBSSxjQUFjLEdBQUcsT0FBTyxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDekQsSUFBSSxNQUFNLEdBQVcsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUM7O0FBRXJELFNBQVMsb0JBQW9CLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRTtBQUM3QyxnQkFBYyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0NBQzNDO0FBQ0QsUUFBUSxDQUFDLG9CQUFvQixFQUFFLGNBQWMsQ0FBQyxDQUFBOztBQUU5QyxNQUFNLENBQUMsb0JBQW9CLENBQUMsU0FBUyxFQUFFOztBQUVyQyxpQkFBZSxFQUFFLGFBQWE7QUFDOUIsbUJBQWlCLEVBQUUsMkJBQVMsU0FBUyxFQUFFO0FBQ3JDLFFBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztBQUMxRSxRQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixHQUFHLElBQUksR0FBRSxvQ0FBb0MsR0FBRyxJQUFJLENBQUMsQ0FBQztHQUN2Rjs7O0FBR0QsYUFBVyxFQUFFLHFCQUFTLFNBQVMsRUFBRSxFQUFFLEVBQUU7QUFDbkMsUUFBSSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztHQUMvRzs7O0FBR0QsVUFBUSxFQUFFLGtCQUFTLFNBQVMsRUFBRTtBQUM1QixRQUFJLENBQUMsU0FBUyxDQUFDO0FBQ2IsU0FBRyxFQUFFLCtEQUErRCxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsR0FBRztBQUNySSxZQUFNLEVBQUUsZ0JBQVMsSUFBSSxFQUFFO0FBQ3JCLGVBQU8sSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7T0FDeEI7S0FDRixDQUFDLENBQUM7R0FDSjs7O0FBR0QsV0FBUyxFQUFFLG1CQUFTLFNBQVMsRUFBRSxNQUFNLEVBQUU7QUFDckMsUUFBSSxDQUFDLFNBQVMsQ0FBQztBQUNiLFNBQUcsRUFBRSxpREFBaUQsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FDekYsNkJBQTZCLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxHQUFHO0FBQzlGLFlBQU0sRUFBRSxnQkFBUyxJQUFJLEVBQUU7QUFDckIsZUFBTyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztPQUN4QjtLQUNGLENBQUMsQ0FBQztHQUNKOztDQUVGLENBQUMsQ0FBQTs7QUFFRixTQUFTLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUU7QUFDeEMsU0FBTyxNQUFNLEdBQU0sTUFBTSxTQUFJLEtBQUssR0FBSyxLQUFLLENBQUM7Q0FDOUM7O0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxvQkFBb0IsQ0FBQyIsImZpbGUiOiJjb21waWxlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gTXlTUUwgU2NoZW1hIENvbXBpbGVyXG4vLyAtLS0tLS0tXG52YXIgaW5oZXJpdHMgICAgICAgPSByZXF1aXJlKCdpbmhlcml0cycpO1xudmFyIFNjaGVtYUNvbXBpbGVyID0gcmVxdWlyZSgnLi4vLi4vLi4vc2NoZW1hL2NvbXBpbGVyJyk7XG52YXIgYXNzaWduICAgICAgICAgPSByZXF1aXJlKCdsb2Rhc2gvb2JqZWN0L2Fzc2lnbicpO1xuXG5mdW5jdGlvbiBTY2hlbWFDb21waWxlcl9NU1NRTChjbGllbnQsIGJ1aWxkZXIpIHtcbiAgU2NoZW1hQ29tcGlsZXIuY2FsbCh0aGlzLCBjbGllbnQsIGJ1aWxkZXIpXG59XG5pbmhlcml0cyhTY2hlbWFDb21waWxlcl9NU1NRTCwgU2NoZW1hQ29tcGlsZXIpXG5cbmFzc2lnbihTY2hlbWFDb21waWxlcl9NU1NRTC5wcm90b3R5cGUsIHtcblxuICBkcm9wVGFibGVQcmVmaXg6ICdEUk9QIFRBQkxFICcsXG4gIGRyb3BUYWJsZUlmRXhpc3RzOiBmdW5jdGlvbih0YWJsZU5hbWUpIHtcbiAgICB2YXIgbmFtZSA9IHRoaXMuZm9ybWF0dGVyLndyYXAocHJlZml4ZWRUYWJsZU5hbWUodGhpcy5zY2hlbWEsIHRhYmxlTmFtZSkpO1xuICAgIHRoaXMucHVzaFF1ZXJ5KCdpZiBvYmplY3RfaWQoXFwnJyArIG5hbWUgKydcXCcsIFxcJ1VcXCcpIGlzIG5vdCBudWxsIERST1AgVEFCTEUgJyArIG5hbWUpO1xuICB9LFxuXG4gIC8vIFJlbmFtZSBhIHRhYmxlIG9uIHRoZSBzY2hlbWEuXG4gIHJlbmFtZVRhYmxlOiBmdW5jdGlvbih0YWJsZU5hbWUsIHRvKSB7XG4gICAgdGhpcy5wdXNoUXVlcnkoJ2V4ZWMgc3BfcmVuYW1lICcgKyB0aGlzLmZvcm1hdHRlci5wYXJhbWV0ZXIodGFibGVOYW1lKSArICcsICcgKyB0aGlzLmZvcm1hdHRlci5wYXJhbWV0ZXIodG8pKTtcbiAgfSxcblxuICAvLyBDaGVjayB3aGV0aGVyIGEgdGFibGUgZXhpc3RzIG9uIHRoZSBxdWVyeS5cbiAgaGFzVGFibGU6IGZ1bmN0aW9uKHRhYmxlTmFtZSkge1xuICAgIHRoaXMucHVzaFF1ZXJ5KHtcbiAgICAgIHNxbDogJ3NlbGVjdCBvYmplY3RfaWQgZnJvbSBzeXMudGFibGVzIHdoZXJlIG9iamVjdF9pZCA9IG9iamVjdF9pZCgnICsgdGhpcy5mb3JtYXR0ZXIucGFyYW1ldGVyKHRoaXMuZm9ybWF0dGVyLndyYXAodGFibGVOYW1lKSkgKyAnKScsXG4gICAgICBvdXRwdXQ6IGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgICAgcmV0dXJuIHJlc3AubGVuZ3RoID4gMDtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcblxuICAvLyBDaGVjayB3aGV0aGVyIGEgY29sdW1uIGV4aXN0cyBvbiB0aGUgc2NoZW1hLlxuICBoYXNDb2x1bW46IGZ1bmN0aW9uKHRhYmxlTmFtZSwgY29sdW1uKSB7XG4gICAgdGhpcy5wdXNoUXVlcnkoe1xuICAgICAgc3FsOiAnc2VsZWN0IG9iamVjdF9pZCBmcm9tIHN5cy5jb2x1bW5zIHdoZXJlIG5hbWUgPSAnICsgdGhpcy5mb3JtYXR0ZXIucGFyYW1ldGVyKGNvbHVtbikgK1xuICAgICAgJyBhbmQgb2JqZWN0X2lkID0gb2JqZWN0X2lkKCcgKyB0aGlzLmZvcm1hdHRlci5wYXJhbWV0ZXIodGhpcy5mb3JtYXR0ZXIud3JhcCh0YWJsZU5hbWUpKSArICcpJyxcbiAgICAgIG91dHB1dDogZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICByZXR1cm4gcmVzcC5sZW5ndGggPiAwO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbn0pXG5cbmZ1bmN0aW9uIHByZWZpeGVkVGFibGVOYW1lKHByZWZpeCwgdGFibGUpIHtcbiAgcmV0dXJuIHByZWZpeCA/IGAke3ByZWZpeH0uJHt0YWJsZX1gIDogdGFibGU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2NoZW1hQ29tcGlsZXJfTVNTUUw7XG4iXX0=